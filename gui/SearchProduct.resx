<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAABItJREFUSEut
        k1tQlGUYx7cSIa+6qpuY4qIJLlTkIGTZeJE6lF2gNHFIwEGYBp2QRAqEOBqDYsKKjrgCCwktyFlAIZE4
        yEndhQ2B5bDALruwsAvs6WMP6L+H7eumQbTkN/PON/O97/f/vc/zvh/n3/ySJdjOzRKUX80pwzVuBbhX
        GlGQVw3+jbrposL6WHbZ/yM9kdefnlGOzMI+nK+TgtskR06DDBlVE0gqHEBydgsKedUovFEXwH7y8pyN
        zpVnXm9F6cMF1D9Ro3ZgHhUP51DWq8TNLiUK22ZwuVGGhPwBZGXXIO9qjT/76YuJjszqP89rRbNUj/vj
        Syh/NIfr96ZRLZxDy+gimiUa3B1ZRJVoDgUkiiuS4NIFAXIv3XJjI57Pt+GZX8XEXkOHgkGHTIeGQTXq
        xCqqYgGPVEYK1mBo2QTxkgndMwaam0f+fTmic3pJUsqwMc8nxD9JUHxXjD91ZnQr9OhW6vGARMI5Bm1T
        y+iVaaE2r0LBWDC8bEb7lA4lPQpcrJ9CYnIJMs7xndio9fH78gwGKfzJkhmDi38/+zUrGNOb8VhpQBfJ
        1tCtPsOEwYy+WQO1UAleqwKn0xuRksBLY6PW59CBKMxQwChJxmmM0ZBozZCSYEJvQeeMHmIKVTFWSI1W
        /D6qQRWdTUG7AvEX7iA+hlvKRq3P/n2RUJNAbrRAQQEKesoMFhKZoLU8xSj1vm1ahyrxAoo65GgZW0S1
        SAV+pxJJuS34/mT2xoK9e8JhIMEC9VlDY9G0CtWK1SYcpUoUzComqZKRJQZCNWO7WYLeWZT2qBCVVoeT
        EZkpbNT6fOId3v9ANA6GJAz1mbE+wxLtfI4k01TJiNYEkcaA1kmtLZxP17SG/pGibhXCjmcjPPTcF2zU
        +uz9+PjhiIiLFA88o2GlYSDJvMkKGVWxdh7ixRV0UJtq6PreHpxHw5AGqXwhAnzjDGzMxrju+EZefbvb
        JrGQRU8VrLVp7Sz+EbTR9WwaUeMP6TKKafeHfc/C93Dm52zExnh5hW1zcT6C5naxTaJdBWZtvTdjmA5Z
        pDGid9aIPpUJlUI1fA7F48SJq7iV5Dc/mcpJZWM2xt396HvOzn6ywKPp6JPIsUQiJVUzST0bWQH96Uac
        /rkKH3mFI+GnEnSWpGAshQPZTU/0/8ARsDEvZsfOwCCXD49MubkehX9oBvyDM7Dvsyjs2h6A3W7B/MR4
        Pq/24imIznBgkhbjqaIW0nx3dH33+m9sxMvj6hro7bYraLeHR/AH7CsbnaEcGIe5WFXUwTpVAcvQZUiy
        XXAvwu6/S9ajMeQNxzuhdtD1xsMiyYOZBCvdUehPfx/1x+w3R1IRaOdYGWSH5aZgrPTEgOmKBNN0EI8T
        3oHga4fNkRT7bnUs9rPHwq97YGw8CGPTp9BXOmE03R48323N7LJXI8/HwTHv0JuY5TpCJ3gX+go76Ms4
        GEvegis+9sPsslcn54C9bCSeziWfLkApB8I4DtL2v6VlpzeHRG8HmfjUa2gI2YIsXye4eYap2KnN40eP
        rZJYj61T7p7H2rfvDH77L8KefZKaHLp7AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnClear.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>